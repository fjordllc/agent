-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.
CREATE TABLE IF NOT EXISTS public.companies (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    name text COLLATE pg_catalog."default" NOT NULL,
    website text COLLATE pg_catalog."default",
    memo text COLLATE pg_catalog."default",
    created_at timestamp with time zone NOT NULL DEFAULT timezone('utc' :: text, now()),
    CONSTRAINT companies_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

ALTER TABLE
    IF EXISTS public.companies OWNER to postgres;

ALTER TABLE
    IF EXISTS public.companies ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.companies TO anon;

GRANT ALL ON TABLE public.companies TO authenticated;

GRANT ALL ON TABLE public.companies TO postgres;

GRANT ALL ON TABLE public.companies TO service_role;

CREATE POLICY "Authenticated users can access table data" ON public.companies AS PERMISSIVE FOR
SELECT
    TO public USING ((auth.role() = 'authenticated' :: text));

CREATE POLICY "Admin users can update table data" ON public.companies AS PERMISSIVE FOR
UPDATE
    USING (
        auth.uid() in (
            SELECT
                id
            FROM
                public.users
            WHERE
                role = 'admin'
        )
    );

CREATE POLICY "Admin users can insert table data" ON public.companies AS PERMISSIVE FOR
INSERT
    WITH CHECK (
        auth.uid() in (
            SELECT
                id
            FROM
                public.users
            WHERE
                role = 'admin'
        )
    );
